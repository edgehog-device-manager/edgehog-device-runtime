# This file is part of Edgehog.
#
# Copyright 2022 - 2025 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

[package]
name = "edgehog-device-runtime"
version = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
rust-version = { workspace = true }
description = "Edgehog Device Runtime is a portable middleware, that enables remote device management on Linux-based systems."

[workspace]
resolver = "2"
members = [
  "cellular-modems-service",
  "e2e-test",
  "e2e-test-containers",
  "e2e-test-forwarder",
  "edgehog-device-runtime-containers",
  "edgehog-device-runtime-forwarder",
  "edgehog-device-runtime-store",
  "hardware-id-service",
  "led-manager-service",
]

[workspace.package]
version = "0.9.1"
edition = "2021"
homepage = "https://github.com/edgehog-device-manager/edgehog-device-runtime"
rust-version = "1.78"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[profile.release-optimized]
inherits = "release"
strip = true
# Similar to fat in term of performances, but takes substantially less time to run
lto = "thin"
debug = true
# Supported by all platform
split-debuginfo = "packed"

[dependencies]
astarte-device-sdk = { workspace = true, features = ["derive"] }
async-trait = { workspace = true }
bytes = { workspace = true }
cfg-if = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
displaydoc = { workspace = true }
edgehog-containers = { workspace = true, optional = true }
edgehog-forwarder = { workspace = true, optional = true }
edgehog-store = { workspace = true, optional = true }
eyre = { workspace = true }
futures = { workspace = true }
procfs = { workspace = true }
reqwest = { workspace = true, default-features = false, features = ["rustls-tls-native-roots-no-provider", "stream"] }
rustls = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
stable-eyre = { workspace = true }
sysinfo = { workspace = true }
systemd = { workspace = true, optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }
toml = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
udev = { workspace = true, optional = true }
url = { workspace = true }
uuid = { workspace = true, features = ["v5", "v4", "serde"] }
wifiscanner = { workspace = true, optional = true }
zbus = { workspace = true, optional = true, default-features = false, features = ["tokio"] }

# C dependencies
aws-lc-rs = { workspace = true, optional = true }
rusqlite = { workspace = true, optional = true }

[build-dependencies]
rustc_version = { workspace = true }

[dev-dependencies]
astarte-device-sdk-mock = { workspace = true }
httpmock = { workspace = true }
mockall = { workspace = true }
tempdir = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }
tokio-stream = { workspace = true, features = ["net"] }

[features]
default = ["udev", "wifiscanner", "zbus"]
containers = ["dep:edgehog-containers", "dep:edgehog-store"]
forwarder = ["dep:edgehog-forwarder"]
message-hub = ["astarte-device-sdk/message-hub"]
systemd = ["dep:systemd"]
udev = ["dep:udev"]
wifiscanner = ["dep:wifiscanner"]
zbus = ["dep:zbus"]
# Compiles the C dependencies at buildtime instead of using system libraries
# Required for libsqlite3 on ubuntu 24.04 seg faulting with multi join queries
# See: https://bugs.launchpad.net/ubuntu/+source/sqlite3/+bug/2087772
vendored = ["dep:rusqlite", "edgehog-store/vendored", "rusqlite/bundled"]
# Requires bindgen or clang and CMake to generate C bindings at buildtime
bindgen = [
  "dep:rusqlite",
  "dep:aws-lc-rs",
  "edgehog-store/bindgen",
  "rusqlite/buildtime_bindgen",
  "aws-lc-rs/bindgen",
]
# Feature to make it easier to cross compile the runtime, it requires clang and CMake to be
# installed
cross = ["vendored", "bindgen"]

[workspace.dependencies]
astarte-device-sdk = "0.10.3"
astarte-device-sdk-mock = "0.10.3"
async-trait = "0.1.89"
aws-lc-rs = "1.13.3"
backoff = "0.4.0"
base64 = "0.22.1"
bollard = "0.19.2"
bytes = "1.10.1"
cfg-if = "1.0.3"
clap = "4.5.47"
color-eyre = "0.6.5"
diesel = "2.2.12"
diesel_migrations = "2.2.0"
displaydoc = "0.2.5"
edgehog-containers = { package = "edgehog-device-runtime-containers", path = "./edgehog-device-runtime-containers", version = "=0.9.1" }
edgehog-device-forwarder-proto = "0.1.0"
edgehog-forwarder = { package = "edgehog-device-runtime-forwarder", path = "./edgehog-device-runtime-forwarder", version = "=0.9.1" }
edgehog-store = { package = "edgehog-device-runtime-store", path = "./edgehog-device-runtime-store", version = "=0.9.1" }
eyre = "0.6.12"
futures = "0.3.31"
hex = "0.4.3"
http = "1.3.1"
http-body = "1.0.1"
http-body-util = "0.1.3"
httpmock = "0.7"
hyper = "1.7.0"
indexmap = "2.11.0"
itertools = "0.14.0"
mockall = "0.13.1"
pretty_assertions = "1.4.1"
procfs = "0.17.0"
reqwest = { version = "0.12.23", default-features = false, features = ["charset", "http2", "macos-system-configuration"] }
rusqlite = "0.32.1"
rustc_version = "0.4.1"
rustls = "0.23.31"
rustls-native-certs = "0.8.1"
rustls-pemfile = "2.2.0"
serde = "1.0.219"
serde_json = "1.0.143"
stable-eyre = "0.2.2"
sync_wrapper = "1.0.2"
sysinfo = "0.36.1"
systemd = "0.10.1"
tempdir = "0.3.7"
tempfile = "3.21.0"
thiserror = "2.0.16"
tokio = "1.47.1"
tokio-stream = "0.1.17"
tokio-tungstenite = "0.27.0"
tokio-util = "0.7.16"
toml = "0.9.5"
tracing = "0.1.41"
tracing-subscriber = "0.3.20"
udev = "0.9.3"
url = "2.5.7"
uuid = "1.18.1"
wifiscanner = "0.5.1"
zbus = { version = "5.10.0", default-features = false }
